# Makefile template for Configure for the m32r simulator
# Copyright (C) 1996-2000, 2003-2004, 2007-2012 Free Software
# Foundation, Inc.
# Contributed by Cygnus Support.
#
# This file is part of GDB, the GNU debugger.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

## COMMON_PRE_CONFIG_FRAG

OR1K32_OBJS = \
	or1k32.o \
	arch32.o \
	cpu32.o \
	decode32.o \
	model32.o \
	sem32.o \
	mloop32.o \
	sim-if32.o

OR1K64_OBJS = \
	or1k64.o \
	arch64.o \
	cpu64.o \
	decode64.o \
	model64.o \
	sem64.o \
	mloop64.o \
	sim-if64.o

TRAPS_OBJ = @traps_obj@

SIM_OBJS = \
	$(SIM_NEW_COMMON_OBJS) \
	sim-cpu.o \
	sim-hload.o \
	sim-hrw.o \
	sim-reg.o \
	cgen-utils.o \
	cgen-trace.o \
	cgen-scache.o \
	cgen-run.o \
	sim-reason.o \
	sim-engine.o \
	sim-model.o \
	sim-stop.o \
	$(TRAPS_OBJ)
ifneq (@want_or1k64@,true)
SIM_OBJS += $(OR1K32_OBJS)
else
SIM_OBJS += $(OR1K64_OBJS)
endif

# Extra headers included by sim-main.h.
SIM_EXTRA_DEPS = \
	$(CGEN_INCLUDE_DEPS) \
	or1k-sim.h \
	$(srcdir)/../../opcodes/or1k-desc.h \
	arch32.h \
	cpuall32.h \
	decode32.h \
	arch64.h \
	cpuall64.h \
	decode64.h

SIM_EXTRA_CFLAGS = @sim_extra_cflags@
ifeq (@want_or1k64@,true)
SIM_EXTRA_CFLAGS += -DWANT_OR1K64
endif
ifeq (@want_or1k_nodelay@,true)
SIM_EXTRA_CFLAGS += -DWANT_OR1K_NODELAY
endif

SIM_EXTRA_LIBS = -lm

SIM_RUN_OBJS = nrun.o
SIM_EXTRA_CLEAN =

## COMMON_POST_CONFIG_FRAG

arch = or1k

traps.o: traps.c $(SIM_MAIN_DEPS)
traps-linux.o: traps-linux.c $(SIM_MAIN_DEPS)

# or1k32bf

OR1K32BF_INCLUDE_DEPS = \
	$(CGEN_MAIN_CPU_DEPS) \
	cpu32.h \
	decode32.h \
	eng32.h

mloop32.c eng32.h: stamp-mloop32 ; @true
stamp-mloop32: $(srcdir)/../common/genmloop.sh mloop.in Makefile
	$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \
		-mono -fast -pbb -switch sem32-switch.c \
		-cpu or1k32bf -infile $(srcdir)/mloop.in
	$(SHELL) $(srcroot)/move-if-change eng.hin eng32.h
	$(SHELL) $(srcroot)/move-if-change mloop.cin mloop32.c
	touch stamp-mloop32
mloop32.o: mloop32.c sem32-switch.c $(OR1K32BF_INCLUDE_DEPS)
or1k32.o: or1k.c $(OR1K32BF_INCLUDE_DEPS)
	$(COMPILE) $<
	$(POSTCOMPILE)
arch32.o: arch32.c $(SIM_MAIN_DEPS)
cpu32.o: cpu32.c $(OR1K32BF_INCLUDE_DEPS)
decode32.o: decode32.c $(OR1K32BF_INCLUDE_DEPS)
sem32.o: sem32.c $(OR1K32BF_INCLUDE_DEPS)
sem32-switch.o: sem32-switch.c $(OR1K32BF_INCLUDE_DEPS)
model32.o: model32.c $(OR1K32BF_INCLUDE_DEPS)

sim-if32.o: sim-if.c $(SIM_MAIN_DEPS) $(srcdir)/../common/sim-core.h eng32.h
	$(COMPILE) $<
	$(POSTCOMPILE)

# or1k64bf

OR1K64BF_INCLUDE_DEPS = \
	$(CGEN_MAIN_CPU_DEPS) \
	cpu64.h \
	decode64.h \
	eng64.h

mloop64.c eng64.h: stamp-mloop64 ; @true
stamp-mloop64: $(srcdir)/../common/genmloop.sh mloop.in Makefile
	$(SHELL) $(srccom)/genmloop.sh -shell $(SHELL) \
		-mono -fast -pbb -switch sem32-switch.c \
		-cpu or1k64bf -infile $(srcdir)/mloop.in
	$(SHELL) $(srcroot)/move-if-change eng64.hin eng64.h
	$(SHELL) $(srcroot)/move-if-change mloop64.cin mloop64.c
	touch stamp-mloop64
mloop64.o: mloop64.c sem64.c $(OR1K64BF_INCLUDE_DEPS)
or1k64.o: or1k.c $(OR1K64BF_INCLUDE_DEPS)
	$(COMPILE) $<
	$(POSTCOMPILE)
arch64.o: arch64.c $(SIM_MAIN_DEPS)
cpu64.o: cpu64.c $(OR1K64BF_INCLUDE_DEPS)
decode64.o: decode64.c $(OR1K64BF_INCLUDE_DEPS)
sem64.o: sem64.c $(OR1K64BF_INCLUDE_DEPS)
sem64-switch.o: sem64-switch.c $(OR1K64BF_INCLUDE_DEPS)
model64.o: model64.c $(OR1K64BF_INCLUDE_DEPS)

sim-if64.o: sim-if.c $(SIM_MAIN_DEPS) $(srcdir)/../common/sim-core.h eng64.h
	$(COMPILE) $<
	$(POSTCOMPILE)

# cgen support, enable with --enable-cgen-maint
CGEN_MAINT = ; @true
# The following line is commented in or out depending upon --enable-cgen-maint.
@CGEN_MAINT@CGEN_MAINT =

# NOTE: Generated source files are specified as full paths,
# e.g. $(srcdir)/arch.c, because make may decide the files live
# in objdir otherwise.

OR1K_CGEN_DEPS = \
	$(CPU_DIR)/or1k.cpu \
	$(CPU_DIR)/or1k.opc \
	$(CPU_DIR)/or1kcommon.cpu \
	$(CPU_DIR)/or1korbis.cpu \
	$(CPU_DIR)/or1korfpx.cpu \
	Makefile

stamp-arch32: $(CGEN_READ_SCM) $(CGEN_ARCH_SCM) $(OR1K_CGEN_DEPS)
	$(MAKE) cgen-arch $(CGEN_FLAGS_TO_PASS) \
	  mach=or32,or32nd \
	  SUFFIX=32 \
	  archfile=$(CPU_DIR)/or1k.cpu \
	  FLAGS="with-scache"
	touch $@
$(srcdir)/arch32.h $(srcdir)/arch32.c $(srcdir)/cpuall32.h: $(CGEN_MAINT) stamp-arch32
	@true

stamp-arch64: $(CGEN_READ_SCM) $(CGEN_ARCH_SCM) $(OR1K_CGEN_DEPS)
	$(MAKE) cgen-arch $(CGEN_FLAGS_TO_PASS) \
	  mach=or64,or64nd \
	  SUFFIX=64 \
	  archfile=$(CPU_DIR)/or1k.cpu \
	  FLAGS="with-scache"
	touch $@
$(srcdir)/arch64.h $(srcdir)/arch64.c $(srcdir)/cpuall64.h: $(CGEN_MAINT) stamp-arch64
	@true

stamp-cpu32: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(OR1K_CGEN_DEPS)
	$(MAKE) cgen-cpu-decode $(CGEN_FLAGS_TO_PASS) \
	  cpu=or1k32bf \
	  mach=or32,or32nd \
	  SUFFIX=32 \
	  archfile=$(CPU_DIR)/or1k.cpu \
	  FLAGS="with-scache" \
	  EXTRAFILES="$(CGEN_CPU_SEM) $(CGEN_CPU_SEMSW)"
	touch $@
$(srcdir)/cpu32.h $(srcdir)/cpu32.c $(srcdir)/model32.c $(srcdir)/sem32.c $(srcdir)/sem32-switch.c $(srcdir)/decode32.c $(srcdir)/decode32.h: $(CGEN_MAINT) stamp-cpu32
	@true

stamp-cpu64: $(CGEN_READ_SCM) $(CGEN_CPU_SCM) $(OR1K_CGEN_DEPS)
	$(MAKE) cgen-cpu-decode $(CGEN_FLAGS_TO_PASS) \
	  cpu=or1k64bf \
	  mach=or64,or64nd \
	  SUFFIX=64 \
	  archfile=$(CPU_DIR)/or1k.cpu \
	  FLAGS="with-scache" \
	  EXTRAFILES="$(CGEN_CPU_SEM) $(CGEN_CPU_SEMSW)"
	touch $@
$(srcdir)/cpu64.h $(srcdir)/cpu64.c $(srcdir)/model64.c $(srcdir)/sem64.c $(srcdir)/sem64-switch.c $(srcdir)/decode64.c $(srcdir)/decode64.h: $(CGEN_MAINT) stamp-cpu64
	@true
